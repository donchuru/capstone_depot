name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          # Using environment variables for database credentials
          POSTGRES_USER: ${{ vars.TEST_DB_USER || 'postgres' }}
          POSTGRES_PASSWORD: ${{ vars.TEST_DB_PASSWORD || 'postgres' }} # pragma: allowlist secret
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest flake8
          pip install -e .

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Basic smoke tests
        env:
          DATABASE_URL: postgresql://${{ vars.TEST_DB_USER || 'postgres' }}:${{ vars.TEST_DB_PASSWORD || 'postgres' }}@localhost:5432/test_db
          SECRET_KEY: ci_test_key_not_for_production # pragma: allowlist secret
          FLASK_APP: run.py
          FLASK_ENV: testing
          PYTHONPATH: ${{ github.workspace }}
        run: |
          # Run only the basic tests
          pytest -v tests/test_basic.py

  # Note: We've removed the deploy job since we're now using Heroku Pipeline
  # with automatic deployments that wait for CI to pass
